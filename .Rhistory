plot(aedes$repetition, aedes$aedes, ylab = "Repeticion de Agroquimicos", xlab = "Población de Mosquitos")
plot(aedes$repetition, aedes$aedes, ylab = "Repeticion de Agroquimicos", xlab = "Población de Mosquitos")
reg <- lm(aedes$repetiton ~ aedes$aedes)
plot(aedes$repetition, aedes$aedes, ylab = "Repeticion de Agroquimicos", xlab = "Población de Mosquitos")
reg <- lm(aedes$repetition ~ aedes$aedes)
abline(reg)
plot(aedes$repetition, aedes$aedes, ylab = "Repeticion de Agroquimicos", xlab = "Población de Mosquitos")
View(reg)
h01 <- lm(repetition ~ aedes, data = aedes)
summary(h01)
plot(h01)
{r}
require(pacman)
pacman::p_load(rnaturalearthdata, extrafont, showtext, rnaturalearth, cptcity,
SSDM, ggspatial, raster, terra, rgbif, tidyverse, sf, sp,
geodata, glue, ggpubr)
g = gc(reset=T)
rm(list=ls())
options(scipen = 999, warn = -1)
sps = "Tapirus terrestris"
occr = occ_data(scientificName = sps, limit = 10e5, hasCoordinate = T,
hasGeospatialIssue = F)
plot(aedes$repetition, aedes$aedes, ylab = "Repeticion de Agroquimicos", xlab = "Población de Mosquitos")
occr = occr[[2]]
unique(occr$country) %>%  sort()
occr = occr %>%  dplyr::filter(country == "Ecuador")
occr = occr[[2]]
unique(occr$country) %>%  sort()
sps = "Tapirus terrestris"
occr = occ_data(scientificName = sps, limit = 10e5, hasCoordinate = T,
hasGeospatialIssue = F)
occr = occr[[2]]
unique(occr$country) %>%  sort()
occr = occr %>%  dplyr::filter(country == "Ecuador")
sps = "Tapirus terrestris"
occr = occ_data(scientificName = sps, limit = 10e5, hasCoordinate = T,
hasGeospatialIssue = F)
occr = occr[[2]]
unique(occr$country) %>%  sort()
occr = occr %>%  dplyr::filter(country == "Ecuador")
# Get shapefiles
wrld = ne_countries(returnclass = "sf", scale = 50)
ecu1 = geodata::gadm(country = "ECU", level = 1, path = "tmpr")
# Exploratory maps
plot(st_geometry(wrld))
plot(ecu1)
points(occr$decimalLongitude, occr$decimalLatitude, pch = 16, col = "blue")
# climatic data
bioc = geodata::worldclim_country(country = "ECU", var = "bioc", path = "tmpr")
bioc = terra::crop(bioc, ecu1) %>% terra::mask(., ecu1)
names(bioc) = glue("bioc{1:19}")
# Merge coordinates and bioclimatic data
occr = occr %>%  dplyr::select(x = decimalLongitude, y = decimalLatitude)
vles = terra::extract(bioc, occr[,c("x", "y")])
occr = cbind(occr[,c("x", "y")], vles[,-1])
occr = as_tibble(occr)
occr = mutate(occr, pb = 1)
# Generate backgroun
cell = terra::extract(bioc[[1]], occr[,1:2], cells=T)$cell
duplicated(cell)
mask = bioc[[1]]*0
mask[cell] = NA
back = terra::as.data.frame(mask, xy =T) %>% as_tibble()
back = sample_n(back, size = nrow(occr)*2, replace = FALSE)
colnames(back)[3] = "pb"
back = mutate(back, pb = 0)
back = cbind(back, terra::extract(bioc, back[,c(1,2)])[,-1])
back = as_tibble(back)
# Join data
tble = rbind(occr, back)
# Random Forest Model
bioc = stack(bioc)
tble = as.data.frame(tble)
srdf = modelling(algorithm = "GLM", Env = bioc, Occurrences = tble, Pcol = "pb",
Xcol = "x", cv.parm = c(0.75, 0.25),
Ycol = "y", metric = "TSS", select.metric = "AUC")
plot(srdf@projection)
plot(srdf@binary)
srdf@parameters
srdf@name
srdf@variable.importance
as.numeric(srdf@variable.importance) %>% sum()
rstr = srdf@projection
rstr = terra::rast(rstr)
rslt = terra::as.data.frame(rstr, xy = T) %>%  as_tibble()
# Built the map
windowsFont(georg = windowsFont("Georgia"))
tble = rbind(occr, back)
# Random Forest Model
bioc = stack(bioc)
tble = as.data.frame(tble)
srdf = modelling(algorithm = "GLM", Env = bioc, Occurrences = tble, Pcol = "pb",
Xcol = "x", cv.parm = c(0.75, 0.25),
Ycol = "y", metric = "TSS", select.metric = "AUC")
plot(srdf@projection)
plot(srdf@binary)
srdf@parameters
srdf@name
srdf@variable.importance
as.numeric(srdf@variable.importance) %>% sum()
rstr = srdf@projection
rstr = terra::rast(rstr)
rslt = terra::as.data.frame(rstr, xy = T) %>%  as_tibble()
# Built the map
windowsFont(georg = windowsFont("Georgia"))
tble = rbind(occr, back)
# Random Forest Model
bioc = stack(bioc)
tble = as.data.frame(tble)
srdf = modelling(algorithm = "GLM", Env = bioc, Occurrences = tble, Pcol = "pb",
Xcol = "x", cv.parm = c(0.75, 0.25),
Ycol = "y", metric = "TSS", select.metric = "AUC")
plot(srdf@projection)
plot(srdf@binary)
srdf@parameters
srdf@name
srdf@variable.importance
as.numeric(srdf@variable.importance) %>% sum()
rstr = srdf@projection
rstr = terra::rast(rstr)
rslt = terra::as.data.frame(rstr, xy = T) %>%  as_tibble()
# Built the map
gmap = ggplot() +
geom_tile(data = rslt, aes(x = x, y = y, fill = Projection)) +
scale_fill_gradientn(colors = cpt(pal = "mpl_inferno", n=10, rev = TRUE)) +
geom_sf(data = wrld, fill = NA, col = "grey40", lwd=0.1) +
geom_sf(data = st_as_sf(ecu1), fill = NA, col = "grey40", lwd=0.3) +
coord_sf(xlim = ext(ecu1)[1:2], ylim = ext(ecu1)[3:4]) +
labs(x = "Longitud", y = "Latitud", fill = "Puntaje de Idoneidad") +
ggtitle(label = "Idoneidad para Hyloscirtus sp. en Ecuador", subtitle = "Modelo GLM") +
theme_bw() +
theme(text = element_text(family="georg", color = "grey50"),
legend.position = "bottom",
plot.title = element_text(hjust = 0.5, face = "bold", color ="grey30"),
plot.subtitle = element_text(hjust = 0.5, face = "bold", color ="grey30"),
panel.border = element_rect(color = "grey80") ) +
guides(fill = guide_legend(
direction = "horizontal",
keyheight = unit(1.15, units = "mm"), keywidth = unit(1.15, units = "mm"),
title.position = "top", title.hjust = 0.5, label.hjust = 0.5,
nrow = 1, byrow = T, reverse = F, label.position = "bottom")) +
annotation_scale(location="bl", width_hint =0.5, text_family = "georg",
text_col = "grey60", text_cex = 0.7 ) +
annotation_north_arrow(
location= "tr", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering(text_family = "georg", text_col = "grey40"))
tble = rbind(occr, back)
# GLM Model
bioc = stack(bioc)
require(pacman)
pacman::p_load(rnaturalearthdata, extrafont, showtext, rnaturalearth, cptcity,
SSDM, ggspatial, raster, terra, rgbif, tidyverse, sf, sp,
geodata, glue, ggpubr)
g = gc(reset=T)
rm(list=ls())
options(scipen = 999, warn = -1)
sps = "Tapirus terrestris"
occr = occ_data(scientificName = sps, limit = 10e5, hasCoordinate = T,
hasGeospatialIssue = F)
require(pacman)
pacman::p_load(rnaturalearthdata, extrafont, showtext, rnaturalearth, cptcity,
SSDM, ggspatial, raster, terra, rgbif, tidyverse, sf, sp,
geodata, glue, ggpubr)
g = gc(reset=T)
rm(list=ls())
options(scipen = 999, warn = -1)
sps = "Tapirus terrestris"
occr = occ_data(scientificName = sps, limit = 10e5, hasCoordinate = T,
hasGeospatialIssue = F)
occr = occr[[2]]
unique(occr$country) %>%  sort()
occr = occr %>%  dplyr::filter(country == "Ecuador")
wrld = ne_countries(returnclass = "sf", scale = 50)
ecu1 = geodata::gadm(country = "ECU", level = 1, path = "tmpr")
plot(st_geometry(wrld))
plot(ecu1)
points(occr$decimalLongitude, occr$decimalLatitude, pch = 16, col = "blue")
bioc = geodata::worldclim_country(country = "ECU", var = "bioc", path = "tmpr")
bioc = terra::crop(bioc, ecu1) %>% terra::mask(., ecu1)
names(bioc) = glue("bioc{1:19}")
occr = occr %>%  dplyr::select(x = decimalLongitude, y = decimalLatitude)
vles = terra::extract(bioc, occr[,c("x", "y")])
occr = cbind(occr[,c("x", "y")], vles[,-1])
occr = as_tibble(occr)
occr = mutate(occr, pb = 1)
cell = terra::extract(bioc[[1]], occr[,1:2], cells=T)$cell
duplicated(cell)
mask = bioc[[1]]*0
mask[cell] = NA
back = terra::as.data.frame(mask, xy =T) %>% as_tibble()
back = sample_n(back, size = nrow(occr)*2, replace = FALSE)
colnames(back)[3] = "pb"
back = mutate(back, pb = 0)
back = cbind(back, terra::extract(bioc, back[,c(1,2)])[,-1])
back = as_tibble(back)
tble = rbind(occr, back)
# GLM Model
bioc = stack(bioc)
tble = as.data.frame(tble)
srdf = modelling(algorithm = "GLM", Env = bioc, Occurrences = tble, Pcol = "pb",
Xcol = "x", cv.parm = c(0.75, 0.25),
Ycol = "y", metric = "TSS", select.metric = "AUC")
plot(srdf@projection)
plot(srdf@binary)
srdf@parameters
srdf@name
srdf@variable.importance
as.numeric(srdf@variable.importance) %>% sum()
rstr = srdf@projection
rstr = terra::rast(rstr)
rslt = terra::as.data.frame(rstr, xy = T) %>%  as_tibble()
# Built the map
gmap = ggplot() +
geom_tile(data = rslt, aes(x = x, y = y, fill = Projection)) +
scale_fill_gradientn(colors = cpt(pal = "mpl_inferno", n=10, rev = TRUE)) +
geom_sf(data = wrld, fill = NA, col = "grey40", lwd=0.1) +
geom_sf(data = st_as_sf(ecu1), fill = NA, col = "grey40", lwd=0.3) +
coord_sf(xlim = ext(ecu1)[1:2], ylim = ext(ecu1)[3:4]) +
labs(x = "Longitud", y = "Latitud", fill = "Puntaje de Idoneidad") +
ggtitle(label = "Idoneidad para Tapir. en Ecuador", subtitle = "Modelo GLM") +
theme_bw() +
theme(text = element_text(family="georg", color = "grey50"),
legend.position = "bottom",
plot.title = element_text(hjust = 0.5, face = "bold", color ="grey30"),
plot.subtitle = element_text(hjust = 0.5, face = "bold", color ="grey30"),
panel.border = element_rect(color = "grey80") ) +
guides(fill = guide_legend(
direction = "horizontal",
keyheight = unit(1.15, units = "mm"), keywidth = unit(1.15, units = "mm"),
title.position = "top", title.hjust = 0.5, label.hjust = 0.5,
nrow = 1, byrow = T, reverse = F, label.position = "bottom")) +
annotation_scale(location="bl", width_hint =0.5, text_family = "georg",
text_col = "grey60", text_cex = 0.7 ) +
annotation_north_arrow(
location= "tr", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering(text_family = "georg", text_col = "grey40"))
# GLM Model
bioc = stack(bioc)
tble = as.data.frame(tble)
srdf = modelling(algorithm = "GAM", Env = bioc, Occurrences = tble, Pcol = "pb",
Xcol = "x", cv.parm = c(0.75, 0.25),
Ycol = "y", metric = "TSS", select.metric = "AUC")
plot(srdf@projection)
plot(srdf@binary)
srdf@parameters
srdf@name
srdf@variable.importance
as.numeric(srdf@variable.importance) %>% sum()
rstr = srdf@projection
rstr = terra::rast(rstr)
rslt = terra::as.data.frame(rstr, xy = T) %>%  as_tibble()
# Built the map
gmap = ggplot() +
geom_tile(data = rslt, aes(x = x, y = y, fill = Projection)) +
scale_fill_gradientn(colors = cpt(pal = "mpl_inferno", n=10, rev = TRUE)) +
geom_sf(data = wrld, fill = NA, col = "grey40", lwd=0.1) +
geom_sf(data = st_as_sf(ecu1), fill = NA, col = "grey40", lwd=0.3) +
coord_sf(xlim = ext(ecu1)[1:2], ylim = ext(ecu1)[3:4]) +
labs(x = "Longitud", y = "Latitud", fill = "Puntaje de Idoneidad") +
ggtitle(label = "Idoneidad para el Tapir sp. en Ecuador", subtitle = "Modelo GAM") +
theme_bw() +
theme(text = element_text(family="georg", color = "grey50"),
legend.position = "bottom",
plot.title = element_text(hjust = 0.5, face = "bold", color ="grey30"),
plot.subtitle = element_text(hjust = 0.5, face = "bold", color ="grey30"),
panel.border = element_rect(color = "grey80") ) +
guides(fill = guide_legend(
direction = "horizontal",
keyheight = unit(1.15, units = "mm"), keywidth = unit(1.15, units = "mm"),
title.position = "top", title.hjust = 0.5, label.hjust = 0.5,
nrow = 1, byrow = T, reverse = F, label.position = "bottom")) +
annotation_scale(location="bl", width_hint =0.5, text_family = "georg",
text_col = "grey60", text_cex = 0.7 ) +
annotation_north_arrow(
location= "tr", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering(text_family = "georg", text_col = "grey40"))
image = "https://www.ikiam.edu.ec/wp-content/uploads/2021/12/logo-ikiam-1.png"
cat(paste0('<center><img src="', image,  '"></center>'))
library(ggpubr)
ggarrange
library(readxl)
aedes <- read_excel("aedes.xlsx")
View(aedes)
library(MASS); library(ggplot2)
head(aedes, 2)
summary(aedes)
plot(aedes$aedes, aedes$repetition)+
abline( x= aedes$aedes, y=aedes$repetition)
h01 <- lm(repetition ~ aedes, data = aedes)
summary(h01)
plot(h01)
boxplot(aedes$repetition ~ aedes$aedes, ylab = "Repetición de Agroquímicos", xlab = "Población de Mosquitos")
plot(aedes$repetition, aedes$aedes, ylab = "Repeticion de Agroquimicos", xlab = "Población de Mosquitos")
reg <- lm(aedes$repetition ~ aedes$aedes)
image = "https://www.ikiam.edu.ec/wp-content/uploads/2021/12/logo-ikiam-1.png"
cat(paste0('<center><img src="', image,  '"></center>'))
image = "https://www.ikiam.edu.ec/wp-content/uploads/2021/12/logo-ikiam-1.png"
cat(paste0('<center><img src="', image,  '"></center>'))
library(ggpubr)
ggarrange
library(readxl)
aedes <- read_excel("aedes.xlsx")
View(aedes)
library(MASS); library(ggplot2)
head(aedes, 2)
summary(aedes) # ESTADÍSTICA DESCRIPTIVA
# VISUALIZACIÓN PRELIMINAR
library(ggplot2)
ggplot(data = aedes, aes(x = repetition, y = aedes,
col = agrochem)) +
geom_point()
h01 <- lm(repetition ~ aedes, data = aedes)
summary(h01)
plot(h01)
boxplot(aedes$repetition ~ aedes$aedes, ylab = "Población de Zancudos muertos", xlab = "Repetición", fill = aedes$agrochem)
plot(aedes$repetition, aedes$aedes, ylab = "Repeticion de Agroquimicos", xlab = "Población de Zancudos")
reg <- lm(aedes$repetition ~ aedes$aedes)
abline(reg)
glm1<- glm(aedes ~ repetition, data = aedes, family = poisson)
# Gráfico de dispersión con línea de ajuste
plot(aedes$repetition, aedes$aedes, main = "GLM FAMILIA POISSION", xlab = "Repeticiones de Agroquímicos", ylab = "Población de Zancudos Muertos")
abline(coef(glm1), col = "purple")
# GLM Model
bioc = stack(bioc)
require(pacman)
pacman::p_load(rnaturalearthdata, extrafont, showtext, rnaturalearth, cptcity,
SSDM, ggspatial, raster, terra, rgbif, tidyverse, sf, sp,
geodata, glue, ggpubr)
g = gc(reset=T)
rm(list=ls())
options(scipen = 999, warn = -1)
image = "https://www.ikiam.edu.ec/wp-content/uploads/2021/12/logo-ikiam-1.png"
cat(paste0('<center><img src="', image,  '"></center>'))
library(ggpubr)
ggarrange
library(readxl)
aedes <- read_excel("aedes.xlsx")
View(aedes)
library(MASS); library(ggplot2)
head(aedes, 2)
summary(aedes) # ESTADÍSTICA DESCRIPTIVA
# VISUALIZACIÓN PRELIMINAR
library(ggplot2)
ggplot(data = aedes, aes(x = repetition, y = aedes,
col = agrochem)) +
geom_point()
h01 <- lm(repetition ~ aedes, data = aedes)
summary(h01)
plot(h01)
boxplot(aedes$repetition ~ aedes$aedes, ylab = "Población de Zancudos muertos", xlab = "Repetición", fill = aedes$agrochem)
plot(aedes$repetition, aedes$aedes, ylab = "Repeticion de Agroquimicos", xlab = "Población de Zancudos")
reg <- lm(aedes$repetition ~ aedes$aedes)
abline(reg)
glm1<- glm(aedes ~ repetition, data = aedes, family = poisson)
# Gráfico de dispersión con línea de ajuste
plot(aedes$repetition, aedes$aedes, main = "GLM FAMILIA POISSION", xlab = "Repeticiones de Agroquímicos", ylab = "Población de Zancudos Muertos")
abline(coef(glm1), col = "purple")
print(AIC(reg))
print(glm1$aic)
library(readxl)
disease <- read_excel("disease.xlsx")
View(disease)
library(MASS); library(ggplot2)
head(disease, 2)
summary(disease) # ESTADÍSTICA DESCRIPTIVA
require(pacman)
pacman::p_load(rnaturalearthdata, extrafont, showtext, rnaturalearth, cptcity,
SSDM, ggspatial, raster, terra, rgbif, tidyverse, sf, sp,
geodata, glue, ggpubr)
g = gc(reset=T)
rm(list=ls())
options(scipen = 999, warn = -1)
sps = "Tapirus terrestris"
occr = occ_data(scientificName = sps, limit = 10e5, hasCoordinate = T,
hasGeospatialIssue = F)
occr = occr[[2]]
unique(occr$country) %>%  sort()
occr = occr %>%  dplyr::filter(country == "Ecuador")
wrld = ne_countries(returnclass = "sf", scale = 50)
ecu1 = geodata::gadm(country = "ECU", level = 1, path = "tmpr")
plot(st_geometry(wrld))
plot(ecu1)
points(occr$decimalLongitude, occr$decimalLatitude, pch = 16, col = "blue")
bioc = geodata::worldclim_country(country = "ECU", var = "bioc", path = "tmpr")
bioc = terra::crop(bioc, ecu1) %>% terra::mask(., ecu1)
names(bioc) = glue("bioc{1:19}")
occr = occr %>%  dplyr::select(x = decimalLongitude, y = decimalLatitude)
vles = terra::extract(bioc, occr[,c("x", "y")])
occr = cbind(occr[,c("x", "y")], vles[,-1])
occr = as_tibble(occr)
occr = mutate(occr, pb = 1)
cell = terra::extract(bioc[[1]], occr[,1:2], cells=T)$cell
duplicated(cell)
mask = bioc[[1]]*0
mask[cell] = NA
back = terra::as.data.frame(mask, xy =T) %>% as_tibble()
back = sample_n(back, size = nrow(occr)*2, replace = FALSE)
colnames(back)[3] = "pb"
back = mutate(back, pb = 0)
back = cbind(back, terra::extract(bioc, back[,c(1,2)])[,-1])
back = as_tibble(back)
tble = rbind(occr, back)
# GLM Model
bioc = stack(bioc)
tble = as.data.frame(tble)
srdf = modelling(algorithm = "GLM", Env = bioc, Occurrences = tble, Pcol = "pb",
Xcol = "x", cv.parm = c(0.75, 0.25),
Ycol = "y", metric = "TSS", select.metric = "AUC")
plot(srdf@projection)
plot(srdf@binary)
srdf@parameters
srdf@name
srdf@variable.importance
as.numeric(srdf@variable.importance) %>% sum()
rstr = srdf@projection
rstr = terra::rast(rstr)
rslt = terra::as.data.frame(rstr, xy = T) %>%  as_tibble()
# Built the map
gmap = ggplot() +
geom_tile(data = rslt, aes(x = x, y = y, fill = Projection)) +
scale_fill_gradientn(colors = cpt(pal = "mpl_inferno", n=10, rev = TRUE)) +
geom_sf(data = wrld, fill = NA, col = "grey40", lwd=0.1) +
geom_sf(data = st_as_sf(ecu1), fill = NA, col = "grey40", lwd=0.3) +
coord_sf(xlim = ext(ecu1)[1:2], ylim = ext(ecu1)[3:4]) +
labs(x = "Longitud", y = "Latitud", fill = "Puntaje de Idoneidad") +
ggtitle(label = "Idoneidad para Tapir. en Ecuador", subtitle = "Modelo GLM") +
theme_bw() +
theme(text = element_text(family="georg", color = "grey50"),
legend.position = "bottom",
plot.title = element_text(hjust = 0.5, face = "bold", color ="grey30"),
plot.subtitle = element_text(hjust = 0.5, face = "bold", color ="grey30"),
panel.border = element_rect(color = "grey80") ) +
guides(fill = guide_legend(
direction = "horizontal",
keyheight = unit(1.15, units = "mm"), keywidth = unit(1.15, units = "mm"),
title.position = "top", title.hjust = 0.5, label.hjust = 0.5,
nrow = 1, byrow = T, reverse = F, label.position = "bottom")) +
annotation_scale(location="bl", width_hint =0.5, text_family = "georg",
text_col = "grey60", text_cex = 0.7 ) +
annotation_north_arrow(
location= "tr", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering(text_family = "georg", text_col = "grey40"))
# GLM Model
bioc = stack(bioc)
tble = as.data.frame(tble)
srdf = modelling(algorithm = "GAM", Env = bioc, Occurrences = tble, Pcol = "pb",
Xcol = "x", cv.parm = c(0.75, 0.25),
Ycol = "y", metric = "TSS", select.metric = "AUC")
plot(srdf@projection)
plot(srdf@binary)
srdf@parameters
srdf@name
srdf@variable.importance
as.numeric(srdf@variable.importance) %>% sum()
rstr = srdf@projection
rstr = terra::rast(rstr)
rslt = terra::as.data.frame(rstr, xy = T) %>%  as_tibble()
# Built the map
gmap = ggplot() +
geom_tile(data = rslt, aes(x = x, y = y, fill = Projection)) +
scale_fill_gradientn(colors = cpt(pal = "mpl_inferno", n=10, rev = TRUE)) +
geom_sf(data = wrld, fill = NA, col = "grey40", lwd=0.1) +
geom_sf(data = st_as_sf(ecu1), fill = NA, col = "grey40", lwd=0.3) +
coord_sf(xlim = ext(ecu1)[1:2], ylim = ext(ecu1)[3:4]) +
labs(x = "Longitud", y = "Latitud", fill = "Puntaje de Idoneidad") +
ggtitle(label = "Idoneidad para el Tapir sp. en Ecuador", subtitle = "Modelo GAM") +
theme_bw() +
theme(text = element_text(family="georg", color = "grey50"),
legend.position = "bottom",
plot.title = element_text(hjust = 0.5, face = "bold", color ="grey30"),
plot.subtitle = element_text(hjust = 0.5, face = "bold", color ="grey30"),
panel.border = element_rect(color = "grey80") ) +
guides(fill = guide_legend(
direction = "horizontal",
keyheight = unit(1.15, units = "mm"), keywidth = unit(1.15, units = "mm"),
title.position = "top", title.hjust = 0.5, label.hjust = 0.5,
nrow = 1, byrow = T, reverse = F, label.position = "bottom")) +
annotation_scale(location="bl", width_hint =0.5, text_family = "georg",
text_col = "grey60", text_cex = 0.7 ) +
annotation_north_arrow(
location= "tr", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering(text_family = "georg", text_col = "grey40"))
ecu1 = geodata::gadm(country = "ECU", level = 1, path = "tmpr")
plot(st_geometry(wrld))
plot(ecu1)
points(occr$decimalLongitude, occr$decimalLatitude, pch = 16, col = "blue")
bioc = geodata::worldclim_country(country = "ECU", var = "bioc", path = "tmpr")
bioc = terra::crop(bioc, ecu1) %>% terra::mask(., ecu1)
names(bioc) = glue("bioc{1:19}")
occr = occr %>%  dplyr::select(x = decimalLongitude, y = decimalLatitude)
wrld = ne_countries(returnclass = "sf", scale = 50)
ecu1 = geodata::gadm(country = "ECU", level = 1, path = "tmpr")
plot(st_geometry(wrld))
plot(ecu1)
points(occr$decimalLongitude, occr$decimalLatitude, pch = 16, col = "blue")
bioc = geodata::worldclim_country(country = "ECU", var = "bioc", path = "tmpr")
bioc = terra::crop(bioc, ecu1) %>% terra::mask(., ecu1)
names(bioc) = glue("bioc{1:19}")
occr = occr %>%  dplyr::select(x = decimalLongitude, y = decimalLatitude)
require(pacman)
pacman::p_load(rnaturalearthdata, extrafont, showtext, rnaturalearth, cptcity,
SSDM, ggspatial, raster, terra, rgbif, tidyverse, sf, sp,
geodata, glue, ggpubr)
g = gc(reset=T)
rm(list=ls())
options(scipen = 999, warn = -1)
setwd("C:/Users/PC2/OneDrive/Escritorio/mce5_exam2")
